<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: profile.proto

namespace Pakutoma\Phreakscope\protobuf\profiles;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>perftools.profiles.Profile</code>
 */
class Profile extends \Google\Protobuf\Internal\Message
{
    /**
     * A description of the samples associated with each Sample.value.
     * For a cpu profile this might be:
     *   [["cpu","nanoseconds"]] or [["wall","seconds"]] or [["syscall","count"]]
     * For a heap profile, this might be:
     *   [["allocations","count"], ["space","bytes"]],
     * If one of the values represents the number of events represented
     * by the sample, by convention it should be at index 0 and use
     * sample_type.unit == "count".
     *
     * Generated from protobuf field <code>repeated .perftools.profiles.ValueType sample_type = 1;</code>
     */
    private $sample_type;
    /**
     * The set of samples recorded in this profile.
     *
     * Generated from protobuf field <code>repeated .perftools.profiles.Sample sample = 2;</code>
     */
    private $sample;
    /**
     * Mapping from address ranges to the image/binary/library mapped
     * into that address range.  mapping[0] will be the main binary.
     *
     * Generated from protobuf field <code>repeated .perftools.profiles.Mapping mapping = 3;</code>
     */
    private $mapping;
    /**
     * Locations referenced by samples.
     *
     * Generated from protobuf field <code>repeated .perftools.profiles.Location location = 4;</code>
     */
    private $location;
    /**
     * Functions referenced by locations.
     *
     * Generated from protobuf field <code>repeated .perftools.profiles.Function function = 5;</code>
     */
    private $function;
    /**
     * A common table for strings referenced by various messages.
     * string_table[0] must always be "".
     *
     * Generated from protobuf field <code>repeated string string_table = 6;</code>
     */
    private $string_table;
    /**
     * frames with Function.function_name fully matching the following
     * regexp will be dropped from the samples, along with their successors.
     *
     * Generated from protobuf field <code>int64 drop_frames = 7;</code>
     */
    protected $drop_frames = 0;
    /**
     * frames with Function.function_name fully matching the following
     * regexp will be kept, even if it matches drop_frames.
     *
     * Generated from protobuf field <code>int64 keep_frames = 8;</code>
     */
    protected $keep_frames = 0;
    /**
     * Time of collection (UTC) represented as nanoseconds past the epoch.
     *
     * Generated from protobuf field <code>int64 time_nanos = 9;</code>
     */
    protected $time_nanos = 0;
    /**
     * Duration of the profile, if a duration makes sense.
     *
     * Generated from protobuf field <code>int64 duration_nanos = 10;</code>
     */
    protected $duration_nanos = 0;
    /**
     * The kind of events between sampled occurrences.
     * e.g [ "cpu","cycles" ] or [ "heap","bytes" ]
     *
     * Generated from protobuf field <code>.perftools.profiles.ValueType period_type = 11;</code>
     */
    protected $period_type = null;
    /**
     * The number of events between sampled occurrences.
     *
     * Generated from protobuf field <code>int64 period = 12;</code>
     */
    protected $period = 0;
    /**
     * Free-form text associated with the profile. The text is displayed as is
     * to the user by the tools that read profiles (e.g. by pprof). This field
     * should not be used to store any machine-readable information, it is only
     * for human-friendly content. The profile must stay functional if this field
     * is cleaned.
     *
     * Generated from protobuf field <code>repeated int64 comment = 13;</code>
     */
    private $comment;
    /**
     * Index into the string table of the type of the preferred sample
     * value. If unset, clients should default to the last sample value.
     *
     * Generated from protobuf field <code>int64 default_sample_type = 14;</code>
     */
    protected $default_sample_type = 0;
    /**
     * Documentation link for this profile. The URL must be absolute,
     * e.g., http://pprof.example.com/cpu-profile.html
     * The URL may be missing if the profile was generated by older code or code
     * that did not bother to supply a link.
     *
     * Generated from protobuf field <code>int64 doc_url = 15;</code>
     */
    protected $doc_url = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type array<\Pakutoma\Phreakscope\protobuf\profiles\ValueType>|\Google\Protobuf\Internal\RepeatedField $sample_type
     *           A description of the samples associated with each Sample.value.
     *           For a cpu profile this might be:
     *             [["cpu","nanoseconds"]] or [["wall","seconds"]] or [["syscall","count"]]
     *           For a heap profile, this might be:
     *             [["allocations","count"], ["space","bytes"]],
     *           If one of the values represents the number of events represented
     *           by the sample, by convention it should be at index 0 and use
     *           sample_type.unit == "count".
     *     @type array<\Pakutoma\Phreakscope\protobuf\profiles\Sample>|\Google\Protobuf\Internal\RepeatedField $sample
     *           The set of samples recorded in this profile.
     *     @type array<\Pakutoma\Phreakscope\protobuf\profiles\Mapping>|\Google\Protobuf\Internal\RepeatedField $mapping
     *           Mapping from address ranges to the image/binary/library mapped
     *           into that address range.  mapping[0] will be the main binary.
     *     @type array<\Pakutoma\Phreakscope\protobuf\profiles\Location>|\Google\Protobuf\Internal\RepeatedField $location
     *           Locations referenced by samples.
     *     @type array<\Pakutoma\Phreakscope\protobuf\profiles\PBFunction>|\Google\Protobuf\Internal\RepeatedField $function
     *           Functions referenced by locations.
     *     @type array<string>|\Google\Protobuf\Internal\RepeatedField $string_table
     *           A common table for strings referenced by various messages.
     *           string_table[0] must always be "".
     *     @type int|string $drop_frames
     *           frames with Function.function_name fully matching the following
     *           regexp will be dropped from the samples, along with their successors.
     *     @type int|string $keep_frames
     *           frames with Function.function_name fully matching the following
     *           regexp will be kept, even if it matches drop_frames.
     *     @type int|string $time_nanos
     *           Time of collection (UTC) represented as nanoseconds past the epoch.
     *     @type int|string $duration_nanos
     *           Duration of the profile, if a duration makes sense.
     *     @type \Pakutoma\Phreakscope\protobuf\profiles\ValueType $period_type
     *           The kind of events between sampled occurrences.
     *           e.g [ "cpu","cycles" ] or [ "heap","bytes" ]
     *     @type int|string $period
     *           The number of events between sampled occurrences.
     *     @type array<int>|array<string>|\Google\Protobuf\Internal\RepeatedField $comment
     *           Free-form text associated with the profile. The text is displayed as is
     *           to the user by the tools that read profiles (e.g. by pprof). This field
     *           should not be used to store any machine-readable information, it is only
     *           for human-friendly content. The profile must stay functional if this field
     *           is cleaned.
     *     @type int|string $default_sample_type
     *           Index into the string table of the type of the preferred sample
     *           value. If unset, clients should default to the last sample value.
     *     @type int|string $doc_url
     *           Documentation link for this profile. The URL must be absolute,
     *           e.g., http://pprof.example.com/cpu-profile.html
     *           The URL may be missing if the profile was generated by older code or code
     *           that did not bother to supply a link.
     * }
     */
    public function __construct($data = NULL) {
        \Pakutoma\Phreakscope\protobuf\metadata\Profile::initOnce();
        parent::__construct($data);
    }

    /**
     * A description of the samples associated with each Sample.value.
     * For a cpu profile this might be:
     *   [["cpu","nanoseconds"]] or [["wall","seconds"]] or [["syscall","count"]]
     * For a heap profile, this might be:
     *   [["allocations","count"], ["space","bytes"]],
     * If one of the values represents the number of events represented
     * by the sample, by convention it should be at index 0 and use
     * sample_type.unit == "count".
     *
     * Generated from protobuf field <code>repeated .perftools.profiles.ValueType sample_type = 1;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getSampleType()
    {
        return $this->sample_type;
    }

    /**
     * A description of the samples associated with each Sample.value.
     * For a cpu profile this might be:
     *   [["cpu","nanoseconds"]] or [["wall","seconds"]] or [["syscall","count"]]
     * For a heap profile, this might be:
     *   [["allocations","count"], ["space","bytes"]],
     * If one of the values represents the number of events represented
     * by the sample, by convention it should be at index 0 and use
     * sample_type.unit == "count".
     *
     * Generated from protobuf field <code>repeated .perftools.profiles.ValueType sample_type = 1;</code>
     * @param array<\Pakutoma\Phreakscope\protobuf\profiles\ValueType>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setSampleType($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Pakutoma\Phreakscope\protobuf\profiles\ValueType::class);
        $this->sample_type = $arr;

        return $this;
    }

    /**
     * The set of samples recorded in this profile.
     *
     * Generated from protobuf field <code>repeated .perftools.profiles.Sample sample = 2;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getSample()
    {
        return $this->sample;
    }

    /**
     * The set of samples recorded in this profile.
     *
     * Generated from protobuf field <code>repeated .perftools.profiles.Sample sample = 2;</code>
     * @param array<\Pakutoma\Phreakscope\protobuf\profiles\Sample>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setSample($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Pakutoma\Phreakscope\protobuf\profiles\Sample::class);
        $this->sample = $arr;

        return $this;
    }

    /**
     * Mapping from address ranges to the image/binary/library mapped
     * into that address range.  mapping[0] will be the main binary.
     *
     * Generated from protobuf field <code>repeated .perftools.profiles.Mapping mapping = 3;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getMapping()
    {
        return $this->mapping;
    }

    /**
     * Mapping from address ranges to the image/binary/library mapped
     * into that address range.  mapping[0] will be the main binary.
     *
     * Generated from protobuf field <code>repeated .perftools.profiles.Mapping mapping = 3;</code>
     * @param array<\Pakutoma\Phreakscope\protobuf\profiles\Mapping>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setMapping($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Pakutoma\Phreakscope\protobuf\profiles\Mapping::class);
        $this->mapping = $arr;

        return $this;
    }

    /**
     * Locations referenced by samples.
     *
     * Generated from protobuf field <code>repeated .perftools.profiles.Location location = 4;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getLocation()
    {
        return $this->location;
    }

    /**
     * Locations referenced by samples.
     *
     * Generated from protobuf field <code>repeated .perftools.profiles.Location location = 4;</code>
     * @param array<\Pakutoma\Phreakscope\protobuf\profiles\Location>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setLocation($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Pakutoma\Phreakscope\protobuf\profiles\Location::class);
        $this->location = $arr;

        return $this;
    }

    /**
     * Functions referenced by locations.
     *
     * Generated from protobuf field <code>repeated .perftools.profiles.Function function = 5;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getFunction()
    {
        return $this->function;
    }

    /**
     * Functions referenced by locations.
     *
     * Generated from protobuf field <code>repeated .perftools.profiles.Function function = 5;</code>
     * @param array<\Pakutoma\Phreakscope\protobuf\profiles\PBFunction>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setFunction($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Pakutoma\Phreakscope\protobuf\profiles\PBFunction::class);
        $this->function = $arr;

        return $this;
    }

    /**
     * A common table for strings referenced by various messages.
     * string_table[0] must always be "".
     *
     * Generated from protobuf field <code>repeated string string_table = 6;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getStringTable()
    {
        return $this->string_table;
    }

    /**
     * A common table for strings referenced by various messages.
     * string_table[0] must always be "".
     *
     * Generated from protobuf field <code>repeated string string_table = 6;</code>
     * @param array<string>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setStringTable($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->string_table = $arr;

        return $this;
    }

    /**
     * frames with Function.function_name fully matching the following
     * regexp will be dropped from the samples, along with their successors.
     *
     * Generated from protobuf field <code>int64 drop_frames = 7;</code>
     * @return int|string
     */
    public function getDropFrames()
    {
        return $this->drop_frames;
    }

    /**
     * frames with Function.function_name fully matching the following
     * regexp will be dropped from the samples, along with their successors.
     *
     * Generated from protobuf field <code>int64 drop_frames = 7;</code>
     * @param int|string $var
     * @return $this
     */
    public function setDropFrames($var)
    {
        GPBUtil::checkInt64($var);
        $this->drop_frames = $var;

        return $this;
    }

    /**
     * frames with Function.function_name fully matching the following
     * regexp will be kept, even if it matches drop_frames.
     *
     * Generated from protobuf field <code>int64 keep_frames = 8;</code>
     * @return int|string
     */
    public function getKeepFrames()
    {
        return $this->keep_frames;
    }

    /**
     * frames with Function.function_name fully matching the following
     * regexp will be kept, even if it matches drop_frames.
     *
     * Generated from protobuf field <code>int64 keep_frames = 8;</code>
     * @param int|string $var
     * @return $this
     */
    public function setKeepFrames($var)
    {
        GPBUtil::checkInt64($var);
        $this->keep_frames = $var;

        return $this;
    }

    /**
     * Time of collection (UTC) represented as nanoseconds past the epoch.
     *
     * Generated from protobuf field <code>int64 time_nanos = 9;</code>
     * @return int|string
     */
    public function getTimeNanos()
    {
        return $this->time_nanos;
    }

    /**
     * Time of collection (UTC) represented as nanoseconds past the epoch.
     *
     * Generated from protobuf field <code>int64 time_nanos = 9;</code>
     * @param int|string $var
     * @return $this
     */
    public function setTimeNanos($var)
    {
        GPBUtil::checkInt64($var);
        $this->time_nanos = $var;

        return $this;
    }

    /**
     * Duration of the profile, if a duration makes sense.
     *
     * Generated from protobuf field <code>int64 duration_nanos = 10;</code>
     * @return int|string
     */
    public function getDurationNanos()
    {
        return $this->duration_nanos;
    }

    /**
     * Duration of the profile, if a duration makes sense.
     *
     * Generated from protobuf field <code>int64 duration_nanos = 10;</code>
     * @param int|string $var
     * @return $this
     */
    public function setDurationNanos($var)
    {
        GPBUtil::checkInt64($var);
        $this->duration_nanos = $var;

        return $this;
    }

    /**
     * The kind of events between sampled occurrences.
     * e.g [ "cpu","cycles" ] or [ "heap","bytes" ]
     *
     * Generated from protobuf field <code>.perftools.profiles.ValueType period_type = 11;</code>
     * @return \Pakutoma\Phreakscope\protobuf\profiles\ValueType|null
     */
    public function getPeriodType()
    {
        return $this->period_type;
    }

    public function hasPeriodType()
    {
        return isset($this->period_type);
    }

    public function clearPeriodType()
    {
        unset($this->period_type);
    }

    /**
     * The kind of events between sampled occurrences.
     * e.g [ "cpu","cycles" ] or [ "heap","bytes" ]
     *
     * Generated from protobuf field <code>.perftools.profiles.ValueType period_type = 11;</code>
     * @param \Pakutoma\Phreakscope\protobuf\profiles\ValueType $var
     * @return $this
     */
    public function setPeriodType($var)
    {
        GPBUtil::checkMessage($var, \Pakutoma\Phreakscope\protobuf\profiles\ValueType::class);
        $this->period_type = $var;

        return $this;
    }

    /**
     * The number of events between sampled occurrences.
     *
     * Generated from protobuf field <code>int64 period = 12;</code>
     * @return int|string
     */
    public function getPeriod()
    {
        return $this->period;
    }

    /**
     * The number of events between sampled occurrences.
     *
     * Generated from protobuf field <code>int64 period = 12;</code>
     * @param int|string $var
     * @return $this
     */
    public function setPeriod($var)
    {
        GPBUtil::checkInt64($var);
        $this->period = $var;

        return $this;
    }

    /**
     * Free-form text associated with the profile. The text is displayed as is
     * to the user by the tools that read profiles (e.g. by pprof). This field
     * should not be used to store any machine-readable information, it is only
     * for human-friendly content. The profile must stay functional if this field
     * is cleaned.
     *
     * Generated from protobuf field <code>repeated int64 comment = 13;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getComment()
    {
        return $this->comment;
    }

    /**
     * Free-form text associated with the profile. The text is displayed as is
     * to the user by the tools that read profiles (e.g. by pprof). This field
     * should not be used to store any machine-readable information, it is only
     * for human-friendly content. The profile must stay functional if this field
     * is cleaned.
     *
     * Generated from protobuf field <code>repeated int64 comment = 13;</code>
     * @param array<int>|array<string>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setComment($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::INT64);
        $this->comment = $arr;

        return $this;
    }

    /**
     * Index into the string table of the type of the preferred sample
     * value. If unset, clients should default to the last sample value.
     *
     * Generated from protobuf field <code>int64 default_sample_type = 14;</code>
     * @return int|string
     */
    public function getDefaultSampleType()
    {
        return $this->default_sample_type;
    }

    /**
     * Index into the string table of the type of the preferred sample
     * value. If unset, clients should default to the last sample value.
     *
     * Generated from protobuf field <code>int64 default_sample_type = 14;</code>
     * @param int|string $var
     * @return $this
     */
    public function setDefaultSampleType($var)
    {
        GPBUtil::checkInt64($var);
        $this->default_sample_type = $var;

        return $this;
    }

    /**
     * Documentation link for this profile. The URL must be absolute,
     * e.g., http://pprof.example.com/cpu-profile.html
     * The URL may be missing if the profile was generated by older code or code
     * that did not bother to supply a link.
     *
     * Generated from protobuf field <code>int64 doc_url = 15;</code>
     * @return int|string
     */
    public function getDocUrl()
    {
        return $this->doc_url;
    }

    /**
     * Documentation link for this profile. The URL must be absolute,
     * e.g., http://pprof.example.com/cpu-profile.html
     * The URL may be missing if the profile was generated by older code or code
     * that did not bother to supply a link.
     *
     * Generated from protobuf field <code>int64 doc_url = 15;</code>
     * @param int|string $var
     * @return $this
     */
    public function setDocUrl($var)
    {
        GPBUtil::checkInt64($var);
        $this->doc_url = $var;

        return $this;
    }

}

